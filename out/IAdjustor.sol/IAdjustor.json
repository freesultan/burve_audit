{"abi":[{"type":"function","name":"cacheAdjustment","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toNominal","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"real","type":"int256","internalType":"int256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"nominal","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"toNominal","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"real","type":"uint256","internalType":"uint256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"nominal","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toReal","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"nominal","type":"uint256","internalType":"uint256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"real","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toReal","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"nominal","type":"int256","internalType":"int256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"real","type":"int256","internalType":"int256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cacheAdjustment(address)":"ecac2c9c","toNominal(address,int256,bool)":"814eaa8c","toNominal(address,uint256,bool)":"e85179cc","toReal(address,int256,bool)":"6216c039","toReal(address,uint256,bool)":"07215aac"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cacheAdjustment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"real\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toNominal\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"nominal\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"real\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toNominal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nominal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nominal\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toReal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"real\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"nominal\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toReal\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"real\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cacheAdjustment(address)\":{\"notice\":\"If an adjustment will be queried often, someone can call this to cache the result for cheaper views.\"},\"toNominal(address,int256,bool)\":{\"notice\":\"Convert an int to the nominal value by normalizing the decimals around 18.\"},\"toNominal(address,uint256,bool)\":{\"notice\":\"Convert a uint to the nominal value by normalizing the decimals around 18.\"},\"toReal(address,int256,bool)\":{\"notice\":\"Convert an int to the real value by denormalizing the decimals back to their original value.\"},\"toReal(address,uint256,bool)\":{\"notice\":\"Convert a uint to the real value by denormalizing the decimals back to their original value.\"}},\"notice\":\"Adjustors are contracts that convert token balances in various ways. For example, it re-normalizes non-18 decimal tokens to 18 decimals. Or converts appreciating LSTs to the underlier's balance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/integrations/adjustor/IAdjustor.sol\":\"IAdjustor\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/\",\":@prb/test/=lib/Commons/lib/prb-test/src/\",\":@v3-core/=lib/Commons/lib/v3-core/contracts/\",\":@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/\",\":Commons/=lib/Commons/src/\",\":CommonsTestLib/=lib/Commons/test/lib/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/Commons/lib/prb-test/src/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/integrations/adjustor/IAdjustor.sol\":{\"keccak256\":\"0xccce201be1ad6f7088166b51b024b2866d85a1eecbf654094764149f0885bc72\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://713f05bc5418e3d3e9acf45f44faa10aa80b215228308c4dbad5a84e12d88e9b\",\"dweb:/ipfs/QmRPS7KQbhyK19JpF9S7XkMBzWwExMEpXWjiDfZ1qY6Zkf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cacheAdjustment"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"int256","name":"real","type":"int256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toNominal","outputs":[{"internalType":"int256","name":"nominal","type":"int256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"real","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toNominal","outputs":[{"internalType":"uint256","name":"nominal","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nominal","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toReal","outputs":[{"internalType":"uint256","name":"real","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"int256","name":"nominal","type":"int256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toReal","outputs":[{"internalType":"int256","name":"real","type":"int256"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"cacheAdjustment(address)":{"notice":"If an adjustment will be queried often, someone can call this to cache the result for cheaper views."},"toNominal(address,int256,bool)":{"notice":"Convert an int to the nominal value by normalizing the decimals around 18."},"toNominal(address,uint256,bool)":{"notice":"Convert a uint to the nominal value by normalizing the decimals around 18."},"toReal(address,int256,bool)":{"notice":"Convert an int to the real value by denormalizing the decimals back to their original value."},"toReal(address,uint256,bool)":{"notice":"Convert a uint to the real value by denormalizing the decimals back to their original value."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/","@prb/test/=lib/Commons/lib/prb-test/src/","@v3-core/=lib/Commons/lib/v3-core/contracts/","@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/","Commons/=lib/Commons/src/","CommonsTestLib/=lib/Commons/test/lib/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/Commons/lib/prb-test/src/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/integrations/adjustor/IAdjustor.sol":"IAdjustor"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/integrations/adjustor/IAdjustor.sol":{"keccak256":"0xccce201be1ad6f7088166b51b024b2866d85a1eecbf654094764149f0885bc72","urls":["bzz-raw://713f05bc5418e3d3e9acf45f44faa10aa80b215228308c4dbad5a84e12d88e9b","dweb:/ipfs/QmRPS7KQbhyK19JpF9S7XkMBzWwExMEpXWjiDfZ1qY6Zkf"],"license":"BUSL-1.1"}},"version":1},"id":67}