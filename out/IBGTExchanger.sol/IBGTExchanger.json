{"abi":[{"type":"function","name":"addExchanger","inputs":[{"name":"caller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"bgtBalance","inputs":[],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"bgtToken","inputs":[],"outputs":[{"name":"liquidBGT","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"exchange","inputs":[{"name":"inToken","type":"address","internalType":"address"},{"name":"amount","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"bgtAmount","type":"uint256","internalType":"uint256"},{"name":"spendAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"fund","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getOwed","inputs":[{"name":"caller","type":"address","internalType":"address"}],"outputs":[{"name":"bgtOwed","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isExchanger","inputs":[{"name":"caller","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"rate","inputs":[{"name":"inToken","type":"address","internalType":"address"}],"outputs":[{"name":"rateX128","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeExchanger","inputs":[{"name":"caller","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sendBalance","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBackup","inputs":[{"name":"backup","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRate","inputs":[{"name":"inToken","type":"address","internalType":"address"},{"name":"rateX128","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"viewExchange","inputs":[{"name":"inToken","type":"address","internalType":"address"},{"name":"amount","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"bgtAmount","type":"uint256","internalType":"uint256"},{"name":"spendAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"withdraw","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"bgtAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addExchanger(address)":"f89f2a65","bgtBalance()":"f7b16067","bgtToken()":"a88c2dd7","exchange(address,uint128)":"e864f2b6","fund(uint256)":"ca1d209d","getOwed(address)":"70c0b647","isExchanger(address)":"cb4beb2c","rate(address)":"0ba9d8ca","removeExchanger(address)":"506bd3a6","sendBalance(address,address,uint256)":"2912c9ed","setBackup(address)":"b7dacbf1","setRate(address,uint256)":"2bdb7097","viewExchange(address,uint128)":"b7030985","withdraw(address,uint256)":"f3fef3a3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"addExchanger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bgtBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bgtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"liquidBGT\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bgtAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spendAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"getOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bgtOwed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isExchanger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"}],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rateX128\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"removeExchanger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"backup\",\"type\":\"address\"}],\"name\":\"setBackup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateX128\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"viewExchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bgtAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spendAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bgtAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addExchanger(address)\":{\"notice\":\"The admin can add which contracts are allowed to exchange.\"},\"bgtBalance()\":{\"notice\":\"The amount of BGT up for exchange.\"},\"bgtToken()\":{\"notice\":\"Get the liquid bgt in use. This can potentially change.\"},\"exchange(address,uint128)\":{\"notice\":\"Requests the specified token and amount in exchange for bgt at the set rate. The BGT is not given immediately, instead the caller has a right for which they can withdraw. By keeping the BGT on this contract, we have more flexibility for migrations, or staking, etc. If the entire in amount is not needed for the remaining bgt available, it'll only take what is needed.\"},\"fund(uint256)\":{\"notice\":\"Retrieves bgt from the msg sender for exchange.\"},\"getOwed(address)\":{\"notice\":\"Query the amount of BGT owed to a caller.\"},\"isExchanger(address)\":{\"notice\":\"Check if a contract can exchange bgt or not.\"},\"rate(address)\":{\"notice\":\"Returns the amount of bgt one unit of the inToken would fetch as an X128 number.\"},\"removeExchanger(address)\":{\"notice\":\"Remove permissions from this caller from exchanging.\"},\"sendBalance(address,address,uint256)\":{\"notice\":\"Send the earned token balance to a target (the reward vault to earn more BGT)\"},\"setBackup(address)\":{\"notice\":\"Set a backup IBGTExchanger to fallback to owed balances. This is useful when updating a protocol to a new IBGTExchanger but we need to pay out owed balances.\"},\"viewExchange(address,uint128)\":{\"notice\":\"A view version of exchange that anyone can call.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw some of the bgt owed to the msg sender.\"}},\"notice\":\"A naive interface for exchanging fees for BGT. For now its not very gas optimized because gas is very cheap but in the future we can use transient storage to reserve a conversion balance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/integrations/BGTExchange/IBGTExchanger.sol\":\"IBGTExchanger\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/\",\":@prb/test/=lib/Commons/lib/prb-test/src/\",\":@v3-core/=lib/Commons/lib/v3-core/contracts/\",\":@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/\",\":Commons/=lib/Commons/src/\",\":CommonsTestLib/=lib/Commons/test/lib/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/Commons/lib/prb-test/src/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/integrations/BGTExchange/IBGTExchanger.sol\":{\"keccak256\":\"0x67ff8b1754e07e7b06f66843638ba3dd40c98b4459cab7cf9c50dfaadc6b74d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5c0d527345f643f243ae4e142e73028aaf5d851481878cf0f71cb7d0dd634445\",\"dweb:/ipfs/QmRmdJJHihXuLkCVPyHbXgSCbaoBaKSNMkw22pnfe4qExK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addExchanger"},{"inputs":[],"stateMutability":"view","type":"function","name":"bgtBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bgtToken","outputs":[{"internalType":"address","name":"liquidBGT","type":"address"}]},{"inputs":[{"internalType":"address","name":"inToken","type":"address"},{"internalType":"uint128","name":"amount","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"exchange","outputs":[{"internalType":"uint256","name":"bgtAmount","type":"uint256"},{"internalType":"uint256","name":"spendAmount","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fund"},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"stateMutability":"view","type":"function","name":"getOwed","outputs":[{"internalType":"uint256","name":"bgtOwed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"stateMutability":"view","type":"function","name":"isExchanger","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"inToken","type":"address"}],"stateMutability":"view","type":"function","name":"rate","outputs":[{"internalType":"uint256","name":"rateX128","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeExchanger"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sendBalance"},{"inputs":[{"internalType":"address","name":"backup","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setBackup"},{"inputs":[{"internalType":"address","name":"inToken","type":"address"},{"internalType":"uint256","name":"rateX128","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setRate"},{"inputs":[{"internalType":"address","name":"inToken","type":"address"},{"internalType":"uint128","name":"amount","type":"uint128"}],"stateMutability":"view","type":"function","name":"viewExchange","outputs":[{"internalType":"uint256","name":"bgtAmount","type":"uint256"},{"internalType":"uint256","name":"spendAmount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"bgtAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"addExchanger(address)":{"notice":"The admin can add which contracts are allowed to exchange."},"bgtBalance()":{"notice":"The amount of BGT up for exchange."},"bgtToken()":{"notice":"Get the liquid bgt in use. This can potentially change."},"exchange(address,uint128)":{"notice":"Requests the specified token and amount in exchange for bgt at the set rate. The BGT is not given immediately, instead the caller has a right for which they can withdraw. By keeping the BGT on this contract, we have more flexibility for migrations, or staking, etc. If the entire in amount is not needed for the remaining bgt available, it'll only take what is needed."},"fund(uint256)":{"notice":"Retrieves bgt from the msg sender for exchange."},"getOwed(address)":{"notice":"Query the amount of BGT owed to a caller."},"isExchanger(address)":{"notice":"Check if a contract can exchange bgt or not."},"rate(address)":{"notice":"Returns the amount of bgt one unit of the inToken would fetch as an X128 number."},"removeExchanger(address)":{"notice":"Remove permissions from this caller from exchanging."},"sendBalance(address,address,uint256)":{"notice":"Send the earned token balance to a target (the reward vault to earn more BGT)"},"setBackup(address)":{"notice":"Set a backup IBGTExchanger to fallback to owed balances. This is useful when updating a protocol to a new IBGTExchanger but we need to pay out owed balances."},"viewExchange(address,uint128)":{"notice":"A view version of exchange that anyone can call."},"withdraw(address,uint256)":{"notice":"Withdraw some of the bgt owed to the msg sender."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/","@prb/test/=lib/Commons/lib/prb-test/src/","@v3-core/=lib/Commons/lib/v3-core/contracts/","@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/","Commons/=lib/Commons/src/","CommonsTestLib/=lib/Commons/test/lib/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/Commons/lib/prb-test/src/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/integrations/BGTExchange/IBGTExchanger.sol":"IBGTExchanger"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/integrations/BGTExchange/IBGTExchanger.sol":{"keccak256":"0x67ff8b1754e07e7b06f66843638ba3dd40c98b4459cab7cf9c50dfaadc6b74d3","urls":["bzz-raw://5c0d527345f643f243ae4e142e73028aaf5d851481878cf0f71cb7d0dd634445","dweb:/ipfs/QmRmdJJHihXuLkCVPyHbXgSCbaoBaKSNMkw22pnfe4qExK"],"license":"BUSL-1.1"}},"version":1},"id":63}