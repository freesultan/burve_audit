{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"lpToken","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"_allowance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"depositLP","inputs":[{"name":"lpToken","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"harvest","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"migrate","inputs":[{"name":"newStationProxy","type":"address","internalType":"contract IStationProxy"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawLP","inputs":[{"name":"lpToken","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address,address)":"927da105","depositLP(address,uint256,address)":"46dafa2f","harvest()":"4641257d","migrate(address)":"ce5494bb","withdrawLP(address,uint256,address)":"e50e6371"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"depositLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStationProxy\",\"name\":\"newStationProxy\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"lpToken\":\"The LP token\",\"owner\":\"The owner of the LP token\",\"spender\":\"The spender\"},\"returns\":{\"_allowance\":\"The amount of LP token the spender is allowed to transfer on behalf of the owner.\"}},\"depositLP(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to be deposited\",\"lpToken\":\"The token being deposited\",\"owner\":\"Who \\\"owns\\\" the lp tokens and who the rewards earned by the lpToken should be claimable by.\"}},\"withdrawLP(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to be withdrawn\",\"lpToken\":\"The token being withdrawn\",\"owner\":\"Which owners account we should withdraw these lp tokens from.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"The allowance of LP token the spender is allowed to transfer on behalf of the owner.\"},\"depositLP(address,uint256,address)\":{\"notice\":\"Called by a burve protocol to deposit LPtokens on behalf of a owner and accrue rewards for them.\"},\"harvest()\":{\"notice\":\"Called by a user to harvest rewards owed to them from lptoken deposits they own.\"},\"migrate(address)\":{\"notice\":\"Moves existing deposits to a new station proxy.\"},\"withdrawLP(address,uint256,address)\":{\"notice\":\"Called by a burve protocol to withdraw lptokens on behalf of a owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/single/IStationProxy.sol\":\"IStationProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/\",\":@prb/test/=lib/Commons/lib/prb-test/src/\",\":@v3-core/=lib/Commons/lib/v3-core/contracts/\",\":@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/\",\":Commons/=lib/Commons/src/\",\":CommonsTestLib/=lib/Commons/test/lib/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/Commons/lib/prb-test/src/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/single/IStationProxy.sol\":{\"keccak256\":\"0x48598a853dcc0327176272f015e2d0ef3e460efa94554966a82a34862bafc5ae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8048205a55eabbbebb3bd856d83adef5e05fbaf57565d86ed229f18069c11afa\",\"dweb:/ipfs/QmVauH9RbjstNYCCNpC2pWUac7Ewxq42y97x1fHqgaLYVw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"_allowance","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"depositLP"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"harvest"},{"inputs":[{"internalType":"contract IStationProxy","name":"newStationProxy","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"migrate"},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawLP"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address,address)":{"params":{"lpToken":"The LP token","owner":"The owner of the LP token","spender":"The spender"},"returns":{"_allowance":"The amount of LP token the spender is allowed to transfer on behalf of the owner."}},"depositLP(address,uint256,address)":{"params":{"amount":"The amount of token to be deposited","lpToken":"The token being deposited","owner":"Who \"owns\" the lp tokens and who the rewards earned by the lpToken should be claimable by."}},"withdrawLP(address,uint256,address)":{"params":{"amount":"The amount of token to be withdrawn","lpToken":"The token being withdrawn","owner":"Which owners account we should withdraw these lp tokens from."}}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address,address)":{"notice":"The allowance of LP token the spender is allowed to transfer on behalf of the owner."},"depositLP(address,uint256,address)":{"notice":"Called by a burve protocol to deposit LPtokens on behalf of a owner and accrue rewards for them."},"harvest()":{"notice":"Called by a user to harvest rewards owed to them from lptoken deposits they own."},"migrate(address)":{"notice":"Moves existing deposits to a new station proxy."},"withdrawLP(address,uint256,address)":{"notice":"Called by a burve protocol to withdraw lptokens on behalf of a owner."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/","@prb/test/=lib/Commons/lib/prb-test/src/","@v3-core/=lib/Commons/lib/v3-core/contracts/","@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/","Commons/=lib/Commons/src/","CommonsTestLib/=lib/Commons/test/lib/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/Commons/lib/prb-test/src/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/single/IStationProxy.sol":"IStationProxy"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/single/IStationProxy.sol":{"keccak256":"0x48598a853dcc0327176272f015e2d0ef3e460efa94554966a82a34862bafc5ae","urls":["bzz-raw://8048205a55eabbbebb3bd856d83adef5e05fbaf57565d86ed229f18069c11afa","dweb:/ipfs/QmVauH9RbjstNYCCNpC2pWUac7Ewxq42y97x1fHqgaLYVw"],"license":"BUSL-1.1"}},"version":1},"id":100}