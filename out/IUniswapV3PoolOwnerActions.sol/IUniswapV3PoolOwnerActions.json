{"abi":[{"type":"function","name":"collectProtocol","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0Requested","type":"uint128","internalType":"uint128"},{"name":"amount1Requested","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount0","type":"uint128","internalType":"uint128"},{"name":"amount1","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"setFeeProtocol","inputs":[{"name":"feeProtocol0","type":"uint32","internalType":"uint32"},{"name":"feeProtocol1","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint32,uint32)":"b0d0d211"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/single/integrations/kodiak/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/\",\":@prb/test/=lib/Commons/lib/prb-test/src/\",\":@v3-core/=lib/Commons/lib/v3-core/contracts/\",\":@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/\",\":Commons/=lib/Commons/src/\",\":CommonsTestLib/=lib/Commons/test/lib/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/Commons/lib/prb-test/src/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/single/integrations/kodiak/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0xac426c6b9a0ab546d5270ff3496a1dfb5fa47a44241f4bbd8c7318209e4333ba\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b7cae850cf6c23b962473b3674b13c2914b11cea0f1ee73173e6358ef0b01a18\",\"dweb:/ipfs/QmbQWKFzzzakkPCGedi82xCCdTsQHGB15SJDikyywm2im5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}]},{"inputs":[{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setFeeProtocol"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint32,uint32)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"version":1},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint32,uint32)":{"notice":"Set the denominator of the protocol's % share of the fees"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/Commons/lib/openzeppelin-contracts/","@prb/test/=lib/Commons/lib/prb-test/src/","@v3-core/=lib/Commons/lib/v3-core/contracts/","@v3-periphery/=lib/Commons/lib/v3-periphery/contracts/","Commons/=lib/Commons/src/","CommonsTestLib/=lib/Commons/test/lib/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","prb-test/=lib/Commons/lib/prb-test/src/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/single/integrations/kodiak/pool/IUniswapV3PoolOwnerActions.sol":"IUniswapV3PoolOwnerActions"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/single/integrations/kodiak/pool/IUniswapV3PoolOwnerActions.sol":{"keccak256":"0xac426c6b9a0ab546d5270ff3496a1dfb5fa47a44241f4bbd8c7318209e4333ba","urls":["bzz-raw://b7cae850cf6c23b962473b3674b13c2914b11cea0f1ee73173e6358ef0b01a18","dweb:/ipfs/QmbQWKFzzzakkPCGedi82xCCdTsQHGB15SJDikyywm2im5"],"license":"GPL-2.0-or-later"}},"version":1},"id":110}